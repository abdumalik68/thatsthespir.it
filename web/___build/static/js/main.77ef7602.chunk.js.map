{"version":3,"sources":["utils/Api.js","components/Loader.js","components/Search.js","components/Share.js","components/Quote.js","utils/Helper.js","routes/Home.js","routes/Newsletter.js","routes/SingleQuote.js","components/StickyHeader.js","routes/SingleAuthor.js","routes/HallOfFame.js","routes/SuggestAQuote.js","routes/AllAuthors.js","components/PrivacyPolicy.js","components/Header.js","components/Footer.js","components/SSOProviderLink.js","components/Modal.js","index.js"],"names":["axios","create","baseURL","responseType","Loader","overlay","children","className","getSuggestionValue","suggestion","he","decode","fullname","value","renderSuggestion","query","suggestionText","matches","AutosuggestHighlightMatch","parts","AutosuggestHighlightParse","photo","alt","src","map","part","index","highlight","key","text","replace","Search","props","onChange","event","newValue","method","setState","onSuggestionSelectedHandler","suggestionValue","suggestionIndex","sectionIndex","setQuoteHandler","navigate","url","onSuggestionsFetchRequested","length","loading","API","get","then","response","data","suggestions","catch","err","console","log","onSuggestionsClearRequested","undefined","inputReference","autosuggest","input","state","this","inputProps","placeholder","handleKeys","onKeyEvent","e","focus","Container","Row","Col","xs","ref","onSuggestionSelected","React","Component","Share","document","window","quote","redditProps","body","twitterProps","pinterestProps","imagePath","linkedinProps","title","heartsProps","total_likes","total","href","quote_id","source","target","rel","FacebookShareButton","TwitterShareButton","RedditShareButton","data-height","data-network","data-width-normal","data-width","width","height","PinterestShareButton","LinkedinShareButton","HeartsButton","Quote","showAuthor","author_slug","dangerouslySetInnerHTML","__html","style","backgroundImage","setQuoteFromSearch","callback","scroll","substring","fetchData","route","Date","getTime","alert","Home","bind","Newsletter","md","maxWidth","id","action","type","name","aria-required","position","left","tabIndex","SingleQuote","quoteSlug","StickyHeader","stickyOnScroll","winScroll","scrollTop","documentElement","stickyHeader","getElementById","clonedHeader","querySelector","val","scrollHeight","classList","addEventListener","removeEventListener","author","data-author","SingleAuthor","authorSlug","quotes","HallOfFame","SuggestAQuote","AllAuthors","PrivacyPolicy","Header","logged_in","user","refreshAfterLogin","actionCount","Navbar","Brand","as","Link","to","onClick","homeButtonAction","expand","variant","bg","Toggle","aria-controls","Collapse","Nav","Item","suggestAQuoteAction","Footer","SSOProviderLink","clicked","tryToLogin","provider","res","image","label","Modal","role","aria-labelledby","aria-hidden","modalCloseACtion","data-close","data-dismiss","TheSpirit","goHome","preventDefault","showModal","setAttribute","closeModal","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.77ef7602.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// export default axios.create({\n//     baseURL: \"https://api.thatsthespir.it/v1/\",\n//     responseType: \"json\"\n// });\n\nexport default axios.create({\n    baseURL: \"http://localhost:8000/v1/\",\n    responseType: \"json\"\n});\n","import React from \"react\";\n\n\nconst Loader = ({ overlay = true, children }) => {\n\n    if (overlay) {\n        return <div className=\"Loader\">\n            <div className=\"overlay\">\n                <div className=\"loading-message\">\n                    <div className=\"spinner\"></div>\n                    <div className=\"loading-message-text\">{children}</div>\n                </div>\n            </div>\n        </div>\n    } else {\n        // Without Overlay\n        return <div className=\"Loader\">\n            <div className=\"loading-message\">\n                <div className=\"spinner\"></div>\n                <div className=\"loading-message-text\">{children}</div>\n            </div>\n        </div>\n    }\n}\n\nexport default Loader;\n","import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match';\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { navigate } from \"@reach/router\"\nimport API from \"../utils/Api\";\nimport Loader from './Loader';\n\nimport he from 'he';\n\n// TODO! use ajax instead\n//import allQuotes from '../data/all_quotes_full.json';\n/**\n * Autosuggest feature:\n * source: https://github.com/moroshko/react-autosuggest\n */\n\n\n// When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = (suggestion) => {\n    //return suggestion;\n    return he.decode(`${suggestion.fullname} - ${suggestion.value}`);\n}\n\n// Use your imagination to render suggestions.\nconst renderSuggestion = (suggestion, { query }) => {\n\n    //const suggestionText = he.decode(suggestion.value);\n    const suggestionText = suggestion.value;\n\n    const matches = AutosuggestHighlightMatch(suggestionText, query);\n    const parts = AutosuggestHighlightParse(suggestionText, matches);\n\n    return (\n        <div className=\"quote-preview\">\n            <span className=\"quote-preview-author\">\n                {suggestion.photo ? (<img alt=\"\" className=\"tinythumb\" src={`https://thatsthespir.it/uploads/${suggestion.photo}`} />) : null}\n                {suggestion.fullname}\n            </span>\n            <span className=\"quote-preview-quote\"> –\n            {\n                    parts.map((part, index) => {\n                        const className = part.highlight ? 'highlight' : null;\n                        return (\n                            <span className={className} key={index}>{part.text.replace(/<[^>]+>/g, '')}</span>\n                        );\n                    })\n                }\n            </span>\n        </div>\n    )\n};\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Autosuggest is a controlled component.\n        // This means that you need to provide an input value\n        // and an onChange handler that updates this value (see below).\n        // Suggestions also need to be provided to the Autosuggest,\n        // and they are initially empty because the Autosuggest is closed.\n        this.state = {\n            value: '',\n            suggestions: [],\n            loading: undefined\n        };\n    }\n\n    onChange = (event, { newValue, method }) => {\n        this.setState({\n            value: newValue\n        });\n    };\n\n    onSuggestionSelectedHandler = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\n        /* When suggestion is selected, Update UI to display the selected quote */\n        this.props.setQuoteHandler(suggestion);\n        // console.log(suggestion, \"search: selected suggestion, before routing\");\n        navigate('/' + suggestion.url);\n        this.setState({\n            value: ''\n        });\n\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        //\n        if (value.length > 3) {\n            this.setState({ loading: true });\n            API.get(`https://api.thatsthespir.it/v1/quotes/search?query=${value}`)\n                .then(response => {\n                    //   console.log(response.data.suggestions);\n                    return response.data.suggestions;\n                })\n                .then(suggestions => {\n                    //  console.log(Array.from(data));\n                    this.setState({ suggestions: suggestions, loading: false })\n\n                })\n                .catch(err => {\n                    console.log(err);\n                    return null;\n                });\n        }\n    }\n\n\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: [],\n            loading: undefined,\n            value: ''\n        });\n    };\n    inputReference = autosuggest => {\n        if (autosuggest !== null) {\n            this.input = autosuggest.input;\n        }\n    }\n    render() {\n        const { value, suggestions } = this.state;\n\n        // Autosuggest will pass through all these props to the input.\n        const inputProps = {\n            placeholder: 'Search for a quote or author name',\n            value,\n            onChange: this.onChange\n        };\n        return (\n            <section className=\"search\">\n                <KeyboardEventHandler\n                    handleKeys={['ctrl+f']}\n                    onKeyEvent={(key, e) => this.input.focus()} />\n\n                <Container className=\"content\">\n                    <Row>\n                        <Col xs={12}>\n                            {this.state.loading ? <Loader overlay=\"false\" >Searching...</Loader> : null}\n                            <h1 className=\"ui-title topline\">search</h1>\n                            <Autosuggest\n                                ref={this.inputReference}\n                                suggestions={suggestions}\n                                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                                onSuggestionSelected={this.onSuggestionSelectedHandler}\n                                getSuggestionValue={getSuggestionValue}\n                                renderSuggestion={renderSuggestion}\n                                inputProps={inputProps}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n\n            </section>\n        )\n    }\n\n\n}\n\nexport default Search;\n","import React, { Component } from 'react';\n\nclass Share extends Component {\n\n    isBrowser() {\n        return !(typeof document === \"undefined\" || typeof window === \"undefined\");\n    }\n\n    render() {\n        let url = '/' + this.props.quote.url;\n        //  if (!url && this.isBrowser()) { url = window.location.href; }\n\n        const redditProps = {\n            url,\n            text: this.props.quote.body,\n        };\n\n        const twitterProps = { ...redditProps };\n        const pinterestProps = { ...redditProps, imagePath: '/uploads/' + this.props.quote.photo }\n        const linkedinProps = { ...redditProps, title: this.props.quote.fullname }\n        const heartsProps = {\n            url,\n            total_likes: this.props.quote.total\n        }\n\n        return (\n            <p className=\"share-buttons\">\n                <a className=\"quote-permalink\" href={url}>#{this.props.quote.quote_id}</a>\n                <span className=\"horiz-sep\">|</span>\n                {this.props.quote.source ? <span className=\"source\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.quote.source}>source</a><span className=\"horiz-sep\">|</span></span> : null}\n\n                <FacebookShareButton url={url} />\n                <TwitterShareButton {...twitterProps} />\n                <PinterestShareButton {...pinterestProps} />\n                <LinkedinShareButton {...linkedinProps} />\n                <RedditShareButton {...redditProps} />\n                <span className=\"horiz-sep\">|</span>\n                <HeartsButton {...heartsProps} />\n            </p>\n        )\n    }\n}\n\nconst FacebookShareButton = ({ url }) => (\n    <a rel=\"nofollow\" className=\"social facebook\" href={`//www.facebook.com/sharer/sharer.php?u=${url}`} title=\"Share this quote on Facebook\">\n        <img src=\"/assets/images/facebook.svg\" alt=\"\" />\n    </a>\n);\n\nconst TwitterShareButton = ({ url, text }) => (\n    <a rel=\"nofollow\" className=\"social twitter\" href={`http://twitter.com/share?text=${text}&amp;url=${url}&amp;hashtags=design_quote`} title=\"Share this quote on Twitter\">\n        <img src=\"/assets/images/twitter.svg\" alt=\"\" />\n    </a>\n);\n\nconst RedditShareButton = ({ url, text }) => (\n    <a rel=\"nofollow\" className=\"social reddit\" data-height=\"420\" data-network=\"reddit\" data-width-normal=\"540\" data-width=\"845\" href={`//www.reddit.com/submit?url=${url}&amp;title=${text}`} title=\"Share this quote on Reddit\">\n        <img src=\"/assets/images/reddit.svg\" width=\"19\" height=\"15\" alt=\"\" />\n    </a>\n)\n\nconst PinterestShareButton = ({ url, text, imagePath }) => (\n    <a rel=\"nofollow\" className=\"social pinterest\" href={`https://pinterest.com/pin/create/button/?url=${url}&amp;media=${imagePath}&amp;description=${url}`} title=\"Share this quote on Pinterest\"><img src=\"/assets/images/pinterest.svg\" alt=\"\" /></a>\n\n)\n\nconst LinkedinShareButton = ({ url, text, title }) => (\n    <a rel=\"nofollow\" className=\"social linkedin\" href={`https://www.linkedin.com/shareArticle?mini=true&amp;url=${url}&amp;title=${title}&amp;summary=${text}&amp;source=${url}`} title=\"Share this quote on LinkedIn\"><img src=\"/assets/images/linkedin.svg\" alt=\"\" /></a>\n\n)\n\nconst HeartsButton = ({ url, total_likes }) => (\n    <a rel=\"nofollow\"\n        className=\"social favourite\"\n        href={`${url}#login-ui`}\n        title=\"Favourite this quote so you can easily find it later. \">\n        <em>Save it ?</em>\n        <span className=\"total_likes\">{total_likes}</span>\n    </a>\n)\n\nexport default Share;\n","import React from 'react';\nimport Share from './Share';\n\n\nfunction Quote({ showAuthor, quote }) {\n\n    const [{ body, fullname, author_slug, photo, total }] = [{ ...quote }];\n\n    return (\n        <div className=\"quote single-quote\">\n            <blockquote className=\"\">\n                <span className=\"guillemets\" />\n                <span className=\"the-quote\" dangerouslySetInnerHTML={{ __html: body }}></span>\n                <span className=\"pilcrow\">|</span>\n            </blockquote>\n            {showAuthor ? <div className=\"author\">\n                <div className=\"photo\" style={photo ? { backgroundImage: `url(https://thatsthespir.it/uploads/${photo})` } : null} />\n                <address className=\"author\">–&nbsp;\n                    <a title={`All quotes by ${fullname}`} href={`/author/${author_slug}`} rel=\"author\" className=\"authorName\">\n                        {fullname}<br />\n                        <small className=\"meta\">{total} quote{total > 1 ? 's' : null}</small>\n                    </a>\n                </address>\n            </div> : null}\n\n            <Share quote={quote} />\n        </div>\n    )\n}\n\nexport default Quote;\n","import API from \"./Api\";\nimport { navigate } from \"@reach/router\"\n\nexport function setQuoteFromSearch(data, callback = null) {\n    window.scroll(0, 0);\n    // console.log(data, \"Quote from search / searchHandler\");\n    if (data.url.substring('author/')) {\n        // data is incomplete if it's an author: let's fetch the full data.\n        this.fetchData(data.url + '?fields=quotes', callback);\n        // console.log(data, \"setQuoteFromSearch\");\n        navigate('/' + data.url, { state: { data: data } });\n    } else {\n        this.setState({\n            data: data,\n            loading: false\n        });\n    }\n}\n\nexport function fetchData(route, callback = null) {\n    /** Contact the backend API to fetch content */\n    this.setState({ loading: true });\n    try {\n        if ('quote/random' === route) {\n            const randomTime = new Date().getTime();\n            route += '?random=' + randomTime;\n        }\n\n        API.get(route)\n            .then(response => {\n                // console.log(response, \"fetchQuote: api response\");\n                this.setState({ loading: false, data: response.data }, callback)\n            })\n            .catch(err => {\n                // console.log(err);\n                //this.setState({ loading: false });\n                return null;\n            });\n\n\n        //this.setState((state, props) => ({ quote }))\n\n    } catch (e) {\n        alert(`😱 Axios request failed: ${e}`);\n    }\n}\n","import React from 'react';\nimport Search from '../components/Search';\nimport Quote from '../components/Quote';\nimport { setQuoteFromSearch, fetchData } from '../utils/Helper';\n\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchData = fetchData.bind(this);\n    this.setQuoteFromSearch = setQuoteFromSearch.bind(this);\n  }\n  render() {\n\n    return (\n      <>\n        <Quote quote={this.props.quote} showAuthor={true} />\n        <Search setQuoteHandler={this.setQuoteFromSearch} />\n      </>\n    )\n  };\n}\n\nexport default Home;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Newsletter = () => (\n\n    <Container className=\"content\">\n        <Row>\n            <Col><h1 className=\"topline\">A daily dose of Spirit in your mailbox to start the day?</h1>\n            </Col>\n        </Row>\n        <Row>\n            <Col md={3}>\n                <img src=\"/assets/images/Screenshot_2015-06-01-23-34-00.png\" alt=\"\" style={{ maxWidth: '100%' }} className=\"image-drop-shadow\" />\n            </Col>\n            <Col md={9}>\n                <p>Receive a quote from The Spirit! in your mailbox every day in the morning. It will make you feel...</p>\n                <p>Mmmmmmmmmh, nice.</p>\n                <p>Like that.</p>\n                <div id=\"mc_embed_signup\">\n                    <form action=\"//pixeline.us2.list-manage.com/subscribe/post?u=47aa7bd611cb197be236cd3b2&amp;id=8a917f2ce3\" method=\"post\" id=\"mc-embedded-subscribe-form\">\n                        <div id=\"mc_embed_signup_scroll\">\n                            <div className=\"mc-field-group\">\n                                <label>Your Email Address</label>\n                                <input type=\"email\" name=\"EMAIL\" className=\"required email\" id=\"mce-EMAIL\" aria-required=\"true\" />\n                            </div>\n                            <p className=\"meta\">Powered by <a href=\"http://eepurl.com/N-Z79\" title=\"MailChimp - email marketing made easy and fun\">MailChimp</a><br /><small>\n                                (Each email contains an unsubscribe link, should this ever get annoying.)</small></p>\n                            <div style={{ position: 'absolute', left: '-5000px' }}><input type=\"text\" name=\"b_47aa7bd611cb197be236cd3b2_8a917f2ce3\" tabIndex=\"-1\" /></div>\n                            <div className=\"clear\">\n                                <input type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\" className=\"button\" /></div>\n                        </div>\n                    </form>\n                </div>\n            </Col>\n        </Row>\n    </Container>\n)\n\n\nexport default Newsletter;\n","import React from 'react';\nimport Quote from '../components/Quote';\nimport Search from '../components/Search';\nimport { fetchData, setQuoteFromSearch } from '../utils/Helper';\n\n//import allQuotes from '../data/all_quotes_full.json';\n\nclass SingleQuote extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.fetchData = fetchData.bind(this);\n        this.setQuoteFromSearch = setQuoteFromSearch.bind(this);\n        this.state = {\n            data: {},\n            loading: undefined\n        };\n    }\n    componentDidMount() {\n        if (!this.state.data.body && this.props.quoteSlug) {\n            this.fetchData('/quote/' + this.props.quoteSlug);\n        }\n    }\n    render() {\n\n        return (\n            <>\n                <Quote quote={this.state.data} showAuthor={true} />\n                <Search setQuoteHandler={this.setQuoteFromSearch} />\n            </>\n        )\n    }\n}\n\n\nexport default SingleQuote;\n","import React from \"react\";\n//import Headhesive from \"../utils/headhesive\";\n\nclass StickyHeader extends React.Component {\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.stickyOnScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.stickyOnScroll);\n    }\n    stickyOnScroll = () => {\n        const winScroll = document.body.scrollTop || document.documentElement.scrollTop\n        const stickyHeader = document.getElementById('stickyHeader');\n        const clonedHeader = document.querySelector('.sticky--clone');\n        const val = stickyHeader.scrollHeight + 200;\n        if (clonedHeader) {\n            if (winScroll > val) {\n                clonedHeader.classList = 'sticky--clone sticky';\n            } else {\n                clonedHeader.classList = 'sticky--clone';\n            }\n        }\n    }\n\n\n    render() {\n        const author = this.props.author;\n        return (\n            <>\n                <header id=\"stickyHeader\">\n                    <h1 className=\"ui-title topline\">Quotes by {author.fullname} </h1>\n                    <figure className=\"author\">\n                        <div id=\"photo\" className=\"photo \" data-author=\"{author.fullname}\"\n                            style={author.photo ? { backgroundImage: `url(https://thatsthespir.it/uploads/${author.photo})` } : null} ></div>\n                        <figcaption>{author.fullname} <br />\n                            <small className=\"meta contribution\">{author.total} quote\n                                        {author.total > 1 ? `s` : null}\n                            </small></figcaption>\n                    </figure>\n                </header>\n\n                <header className=\"sticky--clone\">\n                    <h1 className=\"ui-title topline\">Quotes by {author.fullname} </h1>\n                    <figure className=\"author\">\n                        <div id=\"photo\" className=\"photo \" data-author=\"{author.fullname}\"\n                            style={author.photo ? { backgroundImage: `url(https://thatsthespir.it/uploads/${author.photo})` } : null} ></div>\n                        <figcaption>{author.fullname} <br />\n                            <small className=\"meta contribution\">{author.total} quote\n                                        {author.total > 1 ? `s` : null}\n                            </small></figcaption>\n                    </figure>\n                </header>\n            </>\n        )\n    }\n}\n\nexport default StickyHeader;\n\n","import React from 'react';\nimport Search from '../components/Search';\nimport Quote from '../components/Quote';\nimport StickyHeader from '../components/StickyHeader';\nimport { setQuoteFromSearch, fetchData } from '../utils/Helper'\nimport Loader from '../components/Loader';\n\nclass SingleAuthor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n            loading: undefined\n        };\n        this.fetchData = fetchData.bind(this);\n        this.setQuoteFromSearch = setQuoteFromSearch.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchData('/author/' + this.props.authorSlug + '?fields=quotes');\n    }\n\n    componentWillReceiveProps(props) {\n        // const { authorSlug } = props;\n        // if (authorSlug !== this.props.authorSlug) {\n        //     console.log(\"ok, refresh\");\n        // }\n    }\n\n    render() {\n        const quotes = this.state.data.quotes;\n        return (\n            <div className=\"content\">\n                {this.state.loading ? <Loader>Mmmh, let me think...</Loader> : null}\n\n                <div id=\"stickyHeaderContainer\">\n                    <StickyHeader author={this.state.data} />\n                </div>\n\n                <div className=\"author-quotes\">\n                    {quotes && quotes.map((value, index) => {\n                        return (\n                            <div key={index}>\n                                <Quote quote={value} showAuthor={false} />\n                                <span className=\"sep\">⤫</span>\n                            </div>\n                        )\n                    })}\n                </div>\n\n                <Search setQuoteHandler={this.setQuoteFromSearch} />\n            </div>\n        )\n    }\n}\n\n\nexport default SingleAuthor;\n","import React from 'react';\n\n\nconst HallOfFame = () => (\n    <main className=\"hall-of-fame\">\n        <h1>Hall of Fame</h1>\n    </main>\n\n)\n\nexport default HallOfFame;\n","import React from 'react';\n\n\nconst SuggestAQuote = () => (\n    <main className=\"hall-of-fame\">\n        <h1>Suggest a quote</h1>\n    </main>\n\n)\n\nexport default SuggestAQuote;\n","import React from 'react';\n\n\nconst AllAuthors = () => (\n    <main className=\"hall-of-fame\">\n        <h1>All authors</h1>\n    </main>\n\n)\n\nexport default AllAuthors;\n","import React from 'react';\n\n\nconst PrivacyPolicy = () => (\n\n    <main className=\"privacy-policy\">\n        <h1 className=\"topline\">Privacy Policy</h1>\n        <div className=\"content\">\n            <strong>Like millions of other website owners, I use Google Analytics on That's The Spirit!.</strong>\n\n            Google Analytics is a piece of software that grabs data about my visitors (you). It’s something like an advanced server log.\n<h2>What does Google Analytics record?</h2>\n            <ul>\n                <li>What website you came from to get here.</li>\n                <li>How long you stay for.</li>\n                <li>What kind of computer you’re using.</li>\n                <li>And quite a bit more.</li>\n            </ul>\n            <h2>What do I do with your data?</h2>\n            The tracking information allows me to better understand the kind of people who come to my site and what content they’re reading. This allows me to make better decisions about design and writing.\n\n            Occasionally, I will compile aggregate statistics about the number of visitors this site receives and browsers being used. No personally identifying data is included in this type of reporting.\n\nAll of my activity falls within the bounds of the&nbsp;<a href=\"http://www.google.com/analytics/tos.html\">Google Analytics Terms of Service</a>.\n            \n<strong>Want to opt out of tracking?</strong>\n\n            You can <a href=\"http://www.google.com/privacy_ads.html\">opt out of Google’s advertising tracking cookie</a> or <a href=\"http://tools.google.com/dlpage/gaoptout?hl=en\">use a browser plugin to opt out of all Google Analytics tracking software.</a>\n        </div>\n    </main>\n\n)\n\nexport default PrivacyPolicy;\n","import React from 'react';\nimport { Nav, Navbar, Container, Row, Col } from 'react-bootstrap';\nimport { Link } from \"@reach/router\"\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        // Set the state here. Use \"props\" if needed.\n        this.state = {\n            logged_in: false,\n            user: {}\n        };\n        // Bind the event handler function, so that its // `this` binding isn't lost when it gets passed // to the button\n        this.refreshAfterLogin = this.refreshAfterLogin.bind(this);\n    }\n    refreshAfterLogin(action) {\n        console.log('Child says', action);\n        // Replace actionCount with an incremented value\n        this.setState({\n            actionCount: this.state.actionCount + 1\n        });\n    }\n    render() {\n        return (\n            <Container className=\"header\" >\n                <Row className=\"justify-content-between\">\n                    <Col xs={12} md={3} className=\"col-auto mr-auto\">\n                        <Navbar.Brand as={Link} to=\"/\" className=\"mr-auto mt-3\" onClick={this.props.homeButtonAction} >\n                            That's the spirit!<br />\n                            <small>Inspirational quotes for the creative soul.</small>\n                        </Navbar.Brand>\n                    </Col>\n                    <Col xs={12} md={6} className=\"col-auto\">\n                        <Navbar expand=\"md\" variant=\"light\" bg=\"white\" className=\"pr-0\">\n                            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" id=\"toggle-button\" />\n                            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                                <Nav as=\"ul\" id=\"main-menu\" className=\"pr-0 ml-auto\">\n                                    <Nav.Item as=\"li\">\n                                        <Nav.Link as={Link} to=\"/newsletter\" style={{ position: 'relative' }}>Daily\n                                    <span className=\"badge\" title=\"You (will) have new mail!\">1</span>\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item as=\"li\">\n                                        <Nav.Link as={Link} to=\"/suggest-a-quote\" onClick={this.props.suggestAQuoteAction}>Suggest a Quote</Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item as=\"li\" className=\"pr-0 \">\n                                        <Nav.Link as={Link} to=\"/hall-of-fame\">Favs Chart</Nav.Link>\n                                    </Nav.Item>\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Navbar>\n                    </Col>\n                </Row>\n            </Container >\n        )\n    }\n}\n\n\nexport default Header;\n","import React from 'react';\nimport { Link } from \"@reach/router\"\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <p>\n\n                    <Link to=\"/newsletter\">The Spirit! by email ?</Link> -\n                    <Link to=\"/privacy-policy\">Privacy policy</Link> -\n                    <Link to=\"/of/humans\">All Authors</Link> -\n            Made by some <a href=\"https://pixeline.be\" title=\"Brussels web agency\">web designer in Brussels</a>\n                    <br /><img src=\"/assets/images/hand.svg\" alt=\"V for Victory hand sign\" className=\"hand\" />\n                </p>\n            </footer>\n        )\n    }\n}\n\n\nexport default Footer;\n","import React from 'react';\nimport axios from 'axios';\n\n\nclass SSOProviderLink extends React.Component {\n\n    state = {\n        clicked: false\n    }\n    tryToLogin = () => {\n        this.setState({ clicked: true });\n\n        const url = \"http://localhost:8000/auth?provider=\" + this.props.provider;\n        // console.log(url, \"url: \");\n        axios\n            .get(\n                `http://localhost:8000/auth?provider=${this.props.provider}&redirectTo=localhost:3000/newsletter`)\n            .then(res => {\n                console.log(res);\n                this.setState({ clicked: false });\n            });\n    }\n\n    render() {\n        return (\n            <a href={this.props.url} provider={this.props.provider} className=\"no-underline\">\n                <img alt=\"\" src={this.props.image} /><br />{this.props.label}\n            </a>\n        );\n    }\n}\n\nexport default SSOProviderLink;\n","import React from 'react';\nimport SSOProviderLink from '../components/SSOProviderLink';\n\nclass Modal extends React.Component {\n\n    componentDidMount() {\n    }\n\n    render() {\n        return (\n            <section className=\"modal--show\" id=\"login-ui\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-label\" aria-hidden=\"true\">\n                <a href=\"/#!\" className=\"modal-close\" onClick={this.props.modalCloseACtion} title=\"Click to close this.\" data-close=\"Close\" data-dismiss=\"modal\">?</a>\n                <div className=\"modal-inner\">\n                    <div className=\"modal-content\">\n                        <p>To do that, you need to log in the Spirit via one of these services. It only takes a click and you're good to go.</p>\n                        <ul className=\"single-signon-providers\">\n                            <li>\n                                <SSOProviderLink url=\"http://localhost:8000/auth?provider=google&redirectTo=localhost:3000/newsletter\" image=\"/assets/images/google.svg\" provider=\"google\" label=\"Google\" />\n                            </li>\n                            <li>\n                                <SSOProviderLink image=\"/assets/images/github.svg\" provider=\"github\" label=\"GitHub\" />\n                            </li>\n                            <li>\n                                <SSOProviderLink image=\"/assets/images/reddit.svg\" provider=\"reddit\" label=\"Reddit\" />\n                            </li>\n                            <li>\n                                <SSOProviderLink image=\"/assets/images/twitter.svg\" provider=\"twitter\" label=\"Twitter\" />\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\n\nexport default Modal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, navigate } from \"@reach/router\"\n\n// Routes\nimport Home from './routes/Home';\nimport Newsletter from './routes/Newsletter';\nimport SingleQuote from './routes/SingleQuote';\nimport SingleAuthor from './routes/SingleAuthor';\nimport HallOfFame from './routes/HallOfFame';\nimport SuggestAQuote from './routes/SuggestAQuote';\nimport AllAuthors from './routes/AllAuthors';\n// Components\nimport PrivacyPolicy from './components/PrivacyPolicy';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Modal from './components/Modal';\nimport Loader from './components/Loader';\nimport './assets/scss/global.scss';\nimport { fetchData } from './utils/Helper';\n\n//import * as serviceWorker from './serviceWorker';\n\nclass TheSpirit extends React.Component {\n    constructor(props) {\n        super(props);\n        // Set the state here. Use \"props\" if needed.\n        this.state = {\n            data: {},\n            loading: undefined\n        };\n        this.goHome = this.goHome.bind(this);\n        this.fetchData = fetchData.bind(this);\n    }\n    componentDidMount() {\n        this.fetchData('quote/random');\n    }\n\n    goHome = event => {\n        event.preventDefault();\n        this.fetchData('quote/random');\n        navigate('/');\n        window.scroll(0, 0);\n    }\n\n    suggestAQuoteAction = (e) => {\n        // TODO: make this variable dynamic\n        const logged_in = false;\n        if (!logged_in) {\n            this.showModal(e);\n        } else {\n            return true;\n        }\n    }\n    showModal = event => {\n        event.preventDefault();\n        document.getElementById('login-ui').setAttribute('class', 'modal--show is-active');\n    }\n\n    closeModal = event => {\n        event.preventDefault();\n        document.getElementById('login-ui').setAttribute('class', 'modal--show');\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\" id=\"TheSpirit\" >\n                <Header homeButtonAction={this.goHome} suggestAQuoteAction={this.suggestAQuoteAction} />\n                <div id=\"content\" className={this.state.loading ? '\"loading\"' : null}>\n                    {this.state.loading ? <Loader>Mmmh, let me think...</Loader> : null}\n                    <Router>\n                        <Home path=\"/\" quote={this.state.data} />\n                        <Newsletter path=\"/newsletter\" />\n                        <SingleQuote path=\"/quote/:quoteSlug\" />\n                        <SingleAuthor path=\"/author/:authorSlug\" />\n                        <PrivacyPolicy path=\"/privacy-policy\" />\n                        <HallOfFame path=\"/hall-of-fame\" />\n                        <SuggestAQuote path=\"/suggest-a-quote\" />\n                        <AllAuthors path=\"/of/humans\" />\n                    </Router >\n                </div>\n                <Footer />\n                <Modal modalCloseACtion={this.closeModal} />\n            </div>\n        )\n    }\n}\n\n\nReactDOM.render(<TheSpirit />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}